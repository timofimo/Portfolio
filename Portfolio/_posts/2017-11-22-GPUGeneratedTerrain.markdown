---
layout: post
title:  "GPU Generated terrain"
date:   2017-11-22 17:46:00 +0100
categories: [Solo project]
featured_image: "{{site.baseurl}}/assets/images/GPU terrain generation/GPU geometry.png"
---
During a one week holiday I wanted to challenge myself. The only restriction I put on it was that I wanted to learn how to use the geometry shader stage. I found [this]({{ "https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch01.html"}})article in GPU gems 3 on how to procedurally generate terrain on the GPU.

<!--more-->

As with any one week project the end result was still very crude. But my main goal had been achieved. I learned how to program a geometry shader in GLSL. I learned a couple of other neat OpenGL features while working on it.
<h3>My work</h3>
<h4>GPU marching cubes</h4>
The project uses marching cubes to output vertex data to a buffer as described in the article. I was using method 3.
<h4>Transform feedback & queries</h4>
The project uses transform feedback to output the vertices generated by the geometry shader to a buffer. Using queries I get the amount of vertices output to the buffer. Both of these OpenGL features were new to me.
<h4>Tri-planar texture mapping</h4>
I used tri-planar texture mapping to texture the generated terrain.
